if (${TARGET_BUILD_DEBUG})
	set(CMAKE_BUILD_TYPE Debug)
endif()

if(WIN32)
	add_definitions("-DWIN32")
	add_definitions("-D_WINDOWS")
	add_definitions("-DUNICODE")
	add_definitions("-D_UNICODE")
	add_definitions("-DWIN32_LEAN_AND_MEAN")
    add_definitions("-D_CRT_SECURE_NO_DEPRECATE")
    add_definitions("-D_SCL_SECURE_NO_DEPRECATE")
    add_definitions("-D_HAS_EXCEPTIONS=0")
	add_definitions("-D_WIN32_WINNT=0x0601")
	
	set(CMAKE_SHARED_LINKER_FLAGS  "${CMAKE_SHARED_LINKER_FLAGS} /DEBUG /ignore:4099")
	set(CMAKE_EXE_LINKER_FLAGS  "${CMAKE_EXE_LINKER_FLAGS} /DEBUG /ignore:4099")
    set(CMAKE_RUNTIME_OUTPUT_DIRECTORY ${CMAKE_BINARY_DIR}/bin)
	
	if(MSVC)
		set(CMAKE_C_FLAGS_DEBUG "${CMAKE_C_FLAGS_DEBUG} /MTd /Zi /arch:SSE2")
		set(CMAKE_C_FLAGS_RELEASE "${CMAKE_C_FLAGS_RELEASE} /MT /Zi /arch:SSE2")
		set(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} /MT /Zi /arch:SSE2")
		set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} /MT /Zi /arch:SSE2")
		set(CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} /SUBSYSTEM:WINDOWS")
	endif()

elseif(ANDROID)
	set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -Os")
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -Os -std=c++11 -fno-rtti")
    set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Wl,--gc-sections -Xlinker --build-id")
elseif(APPLE)
	set(CMAKE_STATIC_LINKER_FLAGS "${CMAKE_STATIC_LINKER_FLAGS} -ObjC")
	set(CMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_REQUIRED "NO")
	set(CMAKE_XCODE_ATTRIBUTE_CODE_SIGNING_ALLOWED "NO")
	if (IOS)
      set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fembed-bitcode")
      set(CMAKE_C_FLAGS "-fembed-bitcode")
    else ()
      set(CMAKE_XCODE_ATTRIBUTE_MACOSX_DEPLOYMENT_TARGET "10.13")
    endif()
elseif(UNIX)
	if (${TARGET_BUILD_DEBUG})
		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fsanitize=address -O0 -DDEBUG -g")
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -DDEBUG -fsanitize=address -O0 -g -std=c++11")
		set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -g -Wl,-z,defs")
	else ()
		set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -O2 -g ")
		set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O2 -g -std=c++11")
		set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -static-libgcc -g -static-libstdc++ -Wl,-z,defs")
    endif()

    add_definitions(-fPIC)
endif()